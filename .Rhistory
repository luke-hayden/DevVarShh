install.packages("ggplot2")
library("ggplot2", lib.loc="/Library/Frameworks/R.framework/Versions/3.0/Resources/library")
install.packages("reshape2")
install.packages("ggplot")
install.packages("ggplot2")
install.packages("ggplot2", dependencies = TRUE)
sudo apt-get update
install.packages("ggplot2", dependencies = TRUE)
q()
install.packages("ecodist")
library("ecodist", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.2")
install.packages("phytools")
library("phytools", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.2")
x<- 944/851
x
5.3*x
library("ggplot2", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.2")
library("reshape2", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.2")
library("ade4", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.2")
library("ecodist", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.2")
library("phytools", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.2")
setwd("~/Documents/varpap/mx")
mxstg <- read.table("mxFVBDUHiCD1scores20.txt")
mxstgmelted <- melt(mxstg, id.vars=c("ID", "Strain", "Age", "Weight", "Clutch", "shh_M2_spot", "M1_spot_split_LR", "Total_state", "stateord", "Symmetry", "groupwt"))
#logistic regression
subsmxstg <- subset(mxstg, Strain!= "CD1")
subsmxstg$shh_R2_spot <- factor(subsmxstg$shh_R2_spot > 0)
subsmxstg$Strain <- factor(subsmxstg$Strain)
mxlogitR2 <- glm(shh_R2_spot ~ Weight + Strain, data = subsmxstg, family = "binomial")
mxlogitRsummary(mxlogitR2)
subsmxstg$shh_M1_spot <- factor(subsmxstg$shh_M1_spot > 0)
mxlogitM1 <- glm(shh_M1_spot ~ Weight + Strain, data = subsmxstg, family = "binomial")
summary(mxlogitM1)
subsmxstg$cap_transition <- factor(subsmxstg$cap_transition > 0)
mxlogitCAP <- glm(cap_transition ~ Weight + Strain, data = subsmxstg, family = "binomial")
summary(mxlogitCAP)
mxlogitSHB <- glm(shboob ~ Weight + Strain, data = subsmxstg, family = "binomial")
summary(mxlogitSHB)
ggplot(mxstgmelted, aes(x=Weight,y=value,color=Strain,shape=Strain)) +geom_point(size=1.5) + facet_wrap(~ variable,ncol=1) +  scale_y_continuous(breaks=c(0,1,2)) + scale_colour_manual(values=c("forest green", "red3", "cornflowerblue")) +xlab("Embryo Weight(mg)")+ylab("")
dev.copy(svg,'charplot.svg')
dev.off()
dev.copy(pdf,'charplot.pdf')
dev.off()
dev.copy(png,'charplot.png')
dev.off()
nocdmxstgmelted <- subset(mxstgmelted, Strain != "CD1")
ggplot(nocdmxstgmelted, aes(x=Weight,y=value,color=Strain,shape=Strain)) +geom_point(size=1.5) + facet_wrap(~ variable,ncol=1) +  scale_y_continuous(breaks=c(0,1,2)) + scale_colour_manual(values=c("red3", "cornflowerblue"))
ggplot(nocdmxstgmelted, aes(x=Weight,y=value,color=Strain,shape=Strain)) +geom_point(size=1.5) + facet_wrap(~ variable,ncol=1) +  scale_y_continuous(breaks=c(0,1,2)) + scale_colour_manual(values=c("forest green", "cornflowerblue"))
dev.copy(svg,'nocdcharplot.svg')
dev.off()
dev.copy(pdf,'nocdcharplot.pdf')
dev.off()
dev.copy(png,'nocdcharplot.png')
dev.off()
mxtot <- melt(mxstg, id.vars=c("ID", "Strain", "Age", "Weight", "Clutch", "shh_M2_spot", "M1_spot_split_LR", "shh_R2_spot", "shh_M1_spot", "shboob", "cap_transition", "Total_state", "Symmetry", "groupwt"))
ggplot(mxtot, aes(x=Weight,y=value,color=Strain,shape=Strain)) +geom_point(size=2) + facet_wrap(~ variable,ncol=1) + scale_colour_manual(values=c("forest green", "red3", "cornflowerblue")) +xlab("Embryo Weight(mg)")+ylab("")
dev.copy(svg,'totstateallstr.svg')
dev.off()
mxstgpanbystr <- melt(mxstg, id.vars=c("ID", "Strain", "Age", "Weight", "Clutch", "shh_M2_spot", "M1_spot_split_LR", "Total_state", "shh_R2_spot", "shh_M1_spot", "shboob", "cap_transition", "Symmetry", "groupwt"))
ggplot(mxstgpanbystr, aes(x=Weight,y=value,color=Strain)) +geom_point(size=1) + facet_wrap(~ Strain,ncol=1) + scale_colour_manual(values=c("forest green", "red3", "cornflowerblue")) +xlab("Embryo Weight(mg)") +ylab("")
dev.copy(svg,'totstatepanbystr.svg')
dev.off()
dev.copy(pdf,'totstatepanbystr.pdf')
dev.off()
nocdmxstgpanbystr <- subset(mxstgpanbystr, Strain != "CD1")
ggplot(nocdmxstgpanbystr, aes(x=Weight,y=value,color=Strain)) +geom_point(size=1) + facet_wrap(~ Strain,ncol=1) + scale_colour_manual(values=c("forest green", "cornflowerblue"))  + coord_fixed(ratio=12) +xlab("Embryo Weight(mg)") +ylab("")
dev.copy(svg,'nocdtotstatepanbystr.svg')
dev.off()
dev.copy(pdf,'nocdtotstatepanbystr.pdf')
dev.off()
mxsd <- subset(mxstg, Strain=="DUHi")
weights <- (mxsd[,4])
R2 <- (mxsd[,6])
M1 <- (mxsd[,7])
CAP <- (mxsd[,8])
SHB <- (mxsd[,9])
IDs <- (mxsd[,1])
wtdmat <- dist(weights)
r2dmat <- dist(R2)
mr2dmat <- as.matrix(r2dmat)
m1dmat <- dist(M1)
mm1dmat <- as.matrix(m1dmat)
capdmat <- dist(CAP)
mcapdmat <- as.matrix(capdmat)
shbdmat <- dist(SHB)
mshbdmat <- as.matrix(shbdmat)
statedmat <- r2dmat + m1dmat + capdmat + shbdmat
vstatedmat <- c(statedmat)
mstatedmat <- as.matrix(statedmat)
vwtdmat <- c(wtdmat)
isclosemat <- wtdmat <20
dstatedmat <- statedmat
dwtdmat <- wtdmat
dvstatedmat <- vstatedmat
dvwtdmat <- vwtdmat
disclosemat <- isclosemat
mwtdmat <- as.matrix(wtdmat)
#######Timeline of dev differences -matrix for DUHi
closedatfr <- data.frame(1,1,0,0,0,0,0,0)
closedatfr
x <- 1
y <- 1
p1wt <- 0
statediff <- 0
#colnames(closedatfr) <- c("p1", "p2", "p1wt", "statediff")
#closedatfr[1,1]
subindex <- c(1:(length(weights)))
#closedatfr <- rbind(closedatfr, c(y, x, p1wt, statediff))
while (y < length(weights)) {
p1wt <- mxsd[y,4]
neighbourWTs <- weights[mwtdmat[y,] < 10]
neighbourIndices <- subindex[mwtdmat[y,] < 10]
x <- 1
while (x < length(neighbourWTs)) {
xindex <- neighbourIndices[x]
closedatfr <- rbind(closedatfr, c(y, xindex, p1wt, mstatedmat[y,xindex], mr2dmat[y,xindex], mm1dmat[y,xindex], mcapdmat[y,xindex], mshbdmat[y,xindex]))
x <- x+1
}
y <- y+1
}
closedatfr[,9] <- "DUHi"
#closedatfr <- cbind(closedatfr, "DUHi")
colnames(closedatfr) <- c("p1", "p2", "p1wt", "statediff", "R2diff", "M1diff", "capdist", "shbdist", "Strain")
#closedatfr[100:,5] <- "FVB"
#######
closedatfr <- closedatfr[-c(1),]
duclosedatfr <- closedatfr
mxsd <- subset(mxstg, Strain=="FVB")
####Weight and dev state dist matrices for FVB
weights <- (mxsd[,4])
R2 <- (mxsd[,6])
M1 <- (mxsd[,7])
CAP <- (mxsd[,8])
SHB <- (mxsd[,9])
IDs <- (mxsd[,1])
wtdmat <- dist(weights)
r2dmat <- dist(R2)
mr2dmat <- as.matrix(r2dmat)
m1dmat <- dist(M1)
mm1dmat <- as.matrix(m1dmat)
capdmat <- dist(CAP)
mcapdmat <- as.matrix(capdmat)
shbdmat <- dist(SHB)
mshbdmat <- as.matrix(shbdmat)
statedmat <- r2dmat + m1dmat + capdmat + shbdmat
vstatedmat <- c(statedmat)
mstatedmat <- as.matrix(statedmat)
vwtdmat <- c(wtdmat)
mwtdmat <- as.matrix(wtdmat)
fstatedmat <- statedmat
fwtdmat <- wtdmat
fvstatedmat <- vstatedmat
fvwtdmat <- vwtdmat
fisclosemat <- isclosemat
#######Timeline of dev differences -matrix for FVB
closedatfr <- data.frame(1,1,0,0,0,0,0,0)
closedatfr
x <- 1
y <- 1
p1wt <- 0
statediff <- 0
#colnames(closedatfr) <- c("p1", "p2", "p1wt", "statediff")
#closedatfr[1,1]
subindex <- c(1:(length(weights)))
#closedatfr <- rbind(closedatfr, c(y, x, p1wt, statediff))
xindex <- 1
while (y < length(weights)) {
p1wt <- mxsd[y,4]
neighbourWTs <- weights[mwtdmat[y,] < 10]
neighbourIndices <- subindex[mwtdmat[y,] < 10]
x <- 1
while (x < length(neighbourWTs)) {
xindex <- neighbourIndices[x]
closedatfr <- rbind(closedatfr, c(y, xindex, p1wt, mstatedmat[y,xindex], mr2dmat[y,xindex], mm1dmat[y,xindex], mcapdmat[y,xindex], mshbdmat[y,xindex]))
x <- x+1
}
y <- y+1
}
closedatfr[,9] <- "FVB"
#closedatfr <- cbind(closedatfr, "DUHi")
colnames(closedatfr) <- c("p1", "p2", "p1wt", "statediff", "R2diff", "M1diff", "capdist", "shbdist", "Strain")
#closedatfr[100:,5] <- "FVB"
#bothclosedatfr[,10] <- (as.integer((bothclosedatfr$p1wt/(max(bothclosedatfr$p1wt)-min(bothclosedatfr$p1wt)))*20))*5
fvclosedatfr <- closedatfr
bothclosedatfr <- rbind(duclosedatfr,fvclosedatfr)
bothclosedatfr[,10] <- as.integer(bothclosedatfr$p1wt/10)*10
upbins <- (as.integer(bothclosedatfr$p1wt/10)*10)+10
bothclosedatfrplus <- bothclosedatfr
bothclosedatfrplus$V10 <- upbins
#bothclosedatfrplus <- rbind(bothclosedatfr, bothclosedatfrclone)
colnames(bothclosedatfrplus) <- c("p1", "p2", "p1wt", "statediff", "R2diff", "M1diff", "capdist", "shbdist", "Strain", "bin")
a <- min(bothclosedatfrplus$bin)
bothgrps <- c(0)
dubins <- c()
fvbins <- c()
binlist <- c()
while (a < max(bothclosedatfrplus$bin)) {
s <- subset(bothclosedatfrplus, bin==a)
td <- subset(s, Strain == "DUHi")
dumea <- 0+ mean(td$statediff)
dubins <- c(dubins, dumea)
tf <- subset(s, Strain == "FVB")
fvmea <- 0+ mean(tf$statediff)
fvbins <- c(fvbins, fvmea)
binlist <- c(binlist, a)
a <- a +10
}
fvbins
plot(binlist, fvbins, col="cornflowerblue", type="o", pch=16, bg="cornflowerblue", lty=1, xlim = c(80,350), ylim = c(0,4))
lines(binlist, dubins, type="o", col="green", pch=1, lty=1)
lines(duclosedatfr$p1wt, duclosedatfr$statediff, type="o", col="red3", pch=0, lty=0 )
lines(fvclosedatfr$p1wt, fvclosedatfr$statediff, type="o", col="cornflowerblue", pch=0, lty=0 )
dudat <- data.frame(dubins, binlist, c("DUHi"))
colnames(dudat) <- c("meandiff", "wtbin", "strain")
fvdat <- data.frame(fvbins, binlist, c("FVB"))
colnames(fvdat) <- c("meandiff", "wtbin", "strain")
bothdat <- rbind(dudat, fvdat)
ggplot(bothdat, aes(x=wtbin, y=meandiff, color=strain)) + geom_line(size=2) +xlim(90,400) +ylim(0,2) + scale_colour_manual(values=c("red3", "cornflowerblue")) +ylab("Mean Developmental State Difference") +xlab("Embryo Weight(mg)") + coord_fixed(ratio=35)
dev.copy(svg,'devdisttimelineslidewindow.svg')
dev.off()
dev.copy(pdf,'devdisttimelineslidewindow.pdf')
dev.off()
####Plotting developmental variation over time w/ loess
ggplot(bothclosedatfr, aes(x=p1wt,y=statediff, color=Strain)) +geom_point(size=2) + stat_smooth(size=1.5) +xlim(90,400) + scale_colour_manual(values=c("red3", "cornflowerblue")) +ylab("Mean Developmental State Difference") +xlab("Embryo Weight(mg)")
ggplot(bothclosedatfr, aes(x=p1wt,y=statediff, color=Strain)) +geom_point(size=0, alpha =0) + stat_smooth(method=loess, size=1.5) +xlim(90,380) + ylim(-0.5,2)+ scale_colour_manual(values=c("red3", "cornflowerblue")) +ylab("Mean Developmental State Difference") +xlab("Embryo Weight(mg)") + coord_fixed(ratio=40)
dev.copy(svg,'devdisttimelineloess.svg')
dev.off()
dev.copy(pdf,'devdisttimelineloess.pdf')
dev.off()
dev.copy(png,'devdisttimelineloess.png')
dev.off()
mbothclosedatfr <- melt(bothclosedatfr, id.vars=c("p1",  "p2",  "p1wt", "Strain", "V10"))
ggplot(mbothclosedatfr, aes(x=p1wt,y=value,color=Strain)) +geom_point(size=0) + facet_wrap(~ variable,ncol=1) + stat_smooth(method=loess, size=1.5)
dev.copy(svg,'devdisttimelinebychar.svg')
dev.off()
dev.copy(pdf,'devdisttimelinebychar.pdf')
dev.off()
########
plot(dvwtdmat, dvstatedmat, lty=0, pch="I", cex=4,col=adjustcolor("red3", alpha=0.05), xlab="Age difference(mg)", ylab="Developmental state difference", main="DUHi")
dev.copy(svg,'DUdevdistVweightdist.svg')
dev.off()
dev.copy(pdf,'DUdevdistVweightdist.pdf')
dev.off()
plot(fvwtdmat, fvstatedmat, lty=0, col=adjustcolor("cornflowerblue", alpha=0.05), pch="I", cex=4, xlab="Age difference(mg)", ylab="Developmental state difference", main="FVB")
dev.copy(svg,'FVdevdistVweightdist.svg')
dev.off()
dev.copy(pdf,'FVdevdistVweightdist.pdf')
dev.off()
length(fvwtdmat)
plot(fvwtdmat, fvstatedmat, lty=0, col=adjustcolor("blue", alpha=0.005), pch=15, cex=4, xlab="Age difference(mg)", ylab="Developmental state difference", xlim =c(0,400))
lines(dvwtdmat, dvstatedmat, type="p", pch=15, cex=4,col=adjustcolor("red", alpha=0.006))
lines(fvwtdmat, fvstatedmat, type="p", pch=15, cex=4,col=adjustcolor("blue", alpha=0.005))
#lines(dvwtdmat, dvstatedmat, type="p", pch=15, cex=4,col=adjustcolor("red3", alpha=0.01))
#lines(fvwtdmat, fvstatedmat, type="p", pch=15, cex=4,col=adjustcolor("cornflower blue", alpha=0.005))
legend(320,1.5,  c("DUHi","FVB"), lty=c(1,1), lwd=c(2,2),col=c("red","cornflowerblue"))
dev.copy(svg,'bothdevdistVweightdist.svg')
dev.off()
dev.copy(pdf,'bothdevdistVweightdist.pdf')
dev.off()
plot(dvwtdmat, dvstatedmat, lty=0, pch="I", cex=4,col=adjustcolor("red3", alpha=0.05), xlab="Age difference(mg)", ylab="Developmental state difference", main="DUHi")
plot(dvwtdmat, dvstatedmat, lty=0, pch="I", cex=4,col=adjustcolor("forest green", alpha=0.05), xlab="Age difference(mg)", ylab="Developmental state difference", main="DUHi")
dev.copy(svg,'DUdevdistVweightdistg.svg')
dev.off()
dev.copy(png,'DUdevdistVweightdistg.png')
dev.off()
plot(fvwtdmat, fvstatedmat, lty=0, col=adjustcolor("cornflowerblue", alpha=0.05), pch="I", cex=4, xlab="Age difference(mg)", ylab="Developmental state difference", main="FVB")
dev.copy(svg,'FVdevdistVweightdist.svg')
dev.off()
dev.copy(pdf,'FVdevdistVweightdist.pdf')
dev.off()
dev.copy(png,'FVdevdistVweightdist.png')
dev.off()
